<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 
		总结：
		   1.使用xml进行创建对象的原则：
		        1.setXxxx使用<property>来实现
		        2.HttpClients.custom().setConnectionManager(cm).build();
		        	分成：HttpClients.custom().setConnectionManager(cm)和.build()两部分
		        		HttpClients.custom().setConnectionManager(cm):通过setConnectionManager(cm)来判断生成的类，
		        3..build()使用factory-bean="xxx" factory-method="build"来完成
		        4.init-method="start"，代表的是启动容器的时候执行类中的start()方法，
		          destroy-method="shutdown"，代表的是容器消失的时候，执行类中的shutdown()方法
		        5.
	 -->
	<!-- 1.扫描所有的service，得到所有的service对象 -->
	<context:component-scan base-package="com.git.evictor" />
	
	<!-- 1.创建http请求连接池 -->
	<bean id="httpClientConnectionManager" class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<property name="maxTotal" value="200"/>
		<property name="defaultMaxPerRoute" value="20"/>
	</bean>
	
	<!-- 2.创建HttpClientBuilder对象  -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder">
		<property name="connectionManager" ref="httpClientConnectionManager" />
	</bean>
	<!-- 3.配置CloseableHttpClient是多例的 -->
	<bean id="httpClient" class="org.apache.http.impl.client.CloseableHttpClient" factory-bean="httpClientBuilder" factory-method="build" scope="prototype">
	</bean>
	<!-- 4.配置Config的Builder -->
	<bean id="builder" class="org.apache.http.client.config.RequestConfig.Builder">
		<!-- 创建连接的最长时间 -->
		<property name="connectTimeout" value="1000" />
		<!-- 从连接池中获取到连接的最长时间 -->
		<property name="connectionRequestTimeout" value="500" />
		<!-- 数据传输的最长时间 -->
		<property name="socketTimeout" value="10000" />
		<!-- 提交请求前测试连接是否可用 -->
		<property name="staleConnectionCheckEnabled" value="true" />
	</bean>
	<!-- 5.创建配置对象 -->
	<bean class="org.apache.http.client.config.RequestConfig" factory-bean="builder" factory-method="build" />
	<!-- 6.清理无效连接 -->
    <bean class="com.git.evictor.IdleConnectionEvictor" destroy-method="shutdown" init-method="start" />
</beans>
